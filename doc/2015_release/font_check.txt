
Class QueueV
	Private mObjects

	Public Sub Class_Initialize()
	    Set mObjects = CreateObject("Scripting.Dictionary")
	End Sub

	Public Function peek()
	    peek = mObjects.geta(1)
	End Function

	Public Function gets()
	    Set gets = mObjects
	End Function

	Public Function count()
	    count = mObjects.count
	End Function

	Public Sub enque(value)
	    mObjects.add mObjects.count + 1, value
	End Sub

	Public Sub enqueAll(values)
	    Dim i
	    For i = 1 To UBound(values)
	        enque (values(i))
	    Next
	End Sub
	
	Private Function remove(i)
		mObjects.remove i
		
		'キー変更
		Dim j
		for j = i To mObjects.count
			mObjects.add j, mObjects(j + 1)
			mObjects.remove j + 1
		Next		
	End Function

	Public Function deque()
	    deque = mObjects(1)
	    remove(1)
	End Function
End Class


Class DictionaryV
	Private mObjects

	Public Sub Class_Initialize()
	    Set mObjects = CreateObject("Scripting.Dictionary")
	End Sub

	Public Function geta(key)
	   	geta = mObjects(key)
	End Function

	Public Function count()
	    count = mObjects.count
	End Function
	
	Public Function contains(key)
		contains =  mObjects.Exists(key)
	End Function	

	Public Sub add(key,value)
	    mObjects(key) = value
	End Sub

	Public Sub addAll(values)
	    Dim i
	    For i = 1 To values.count
	        add (values(i))
	    Next
	End Sub

	Public Function gets()
	    Set gets = mObjects
	End Function

	Public Function keys()
		keys = mObjects.Keys()
	End Function

	Public Function items()
		items = mObjects.Items
	End Function

	Public Sub clear()
	    Set mObjects = CreateObject("Scripting.Dictionary")
	End Sub
End Class


Sub log(msg)
	logger.WriteLine(msg)
End Sub

Sub warn(msg)
	logger.WriteLine(msg)
	errCount = errCount + 1
End Sub

Sub err(msg)
	logger.WriteLine(msg)
	errCount = errCount + 1
End Sub



Function checkFontSub(workSheet,beginX,endX,beginY,endY,dict)
	Dim last2Cell
	Dim last1Cell
	Dim currentCell
	
	Dim currentKey
	Dim last1Key
	Dim last2Key
	
	Set currentCell = Nothing
	Set last1Cell = Nothing
	Set last2Cell = Nothing
	
	for y = beginY to endY
		for x = beginX to endX
			Set currentCell = workSheet.Cells(y,x)
			currentKey = currentCell.Font.Name + "-" + CStr(currentCell.Font.Size)
			
			if currentCell is Nothing = False and last1Cell is Nothing = False and last2Cell is Nothing = False Then
				If 	currentCell.value <> "" and _
					last1Cell.value <> "" and _
					last2Cell.value <> "" and _
					currentKey = last2Key and _
					currentKey <> last1Key and _
					dict.contains(last1Cell.Address) = False Then
						err("フォントが変更されています." & last1Cell.Address)
						dict.add last1Cell.Address,"1"
				End If
			End If
			
			last2Key = last1Key
			last1Key = currentKey
			
			Set last2Cell = last1Cell
			Set last1Cell = currentCell
		Next
	Next
End Function


Sub checkFont(workSheet)
	Dim printRow
	Dim printCol
 	if workSheet.PageSetup.PrintArea = "" THEN
 		warn("PrintAreaが設定されていません")
 		Exit Sub
 	End IF
	
	With workSheet.Range(workSheet.PageSetup.PrintArea)
		printRow = .Rows.Row + .Rows.Count - 1
		printCol = .Columns.Column + .Columns.Count - 1
	End With


	Dim R
	Dim xDictionary
	Set xDictionary = New DictionaryV
	Set xQueue = New QueueV	
	Dim yDictionary
	Set yDictionary = New DictionaryV
	Set yQueue = New QueueV
	
	
	For Each R In workSheet.UsedRange
		If R.Value <> "" Then
			xDictionary.add R.Column,""
			yDictionary.add R.Row,""
		End If
	Next
	
	
	Dim dict
	Set dict = New DictionaryV
	xQueue.enqueAll xDictionary.keys
	yQueue.enqueAll yDictionary.keys
	Do While 0 < xQueue.count
		x = xQueue.deque
		checkFontSub workSheet,x,x,1,printRow,dict
	Loop
	
	if result <> 0 Then
		Exit Sub
	End If
	
	Do While 0 < yQueue.count
		y = yQueue.deque
		checkFontSub workSheet,1,printCol,y,y,dict
	Loop
End Sub



Sub Main()
	Dim filePath
	Dim workSheet
	Dim logPath

	filePath = Null


	'ファイル選択
	If WScript.Arguments.Count = 1 Then
		'引数より取得
		filePath = WScript.Arguments(0)
	Else
		'ファイル選択ダイアログ
		filePath = Excel.GetOpenFilename("Excel,*.xlsx,Excel_old,*.xls")
	End IF

	If FileSystemObject.FileExists(filePath) = False Then
		MsgBox "Excelファイルが選択されませんでした。"
	Else
		logPath = Shell.SpecialFolders("Desktop") & "\check.log"
		Set logger = FileSystemObject.OpenTextFile(logPath, 2, True)
		Excel.WorkBooks.Open filePath
		Excel.Application.ScreenUpdating = False


		'シート単位でチェック
		For Each workSheet In Excel.Sheets
			logger.WriteLine("【" & workSheet.Name  & "】")
			workSheet.Visible = True
			Call checkFont(workSheet)
		Next
		

		
		Excel.ActiveWorkBook.Close
		Excel.Quit
		
	End If
End Sub



Dim logger
Dim errCount 
Dim Excel
Dim FileSystemObject
Dim Shell
Set Excel = CreateObject("Excel.Application")
Set FileSystemObject = CreateObject("Scripting.FileSystemObject")
Set Shell = WScript.CreateObject("WScript.Shell")
errCount = 0

Main()
	
MsgBox "処理を終えました"